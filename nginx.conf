user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Define the upstream group (load balancing across multiple instances)
    upstream app_backend {
        server host.docker.internal:8000;  # App instance 1
        server host.docker.internal:8001;  # App instance 2
        server host.docker.internal:8002;  # App instance 3
        server host.docker.internal:8003;  # App instance 4
        server host.docker.internal:8004;  # App instance 5
    }

    # Nginx server block to listen on port 80
    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://app_backend;  # Pass requests to the upstream group
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}